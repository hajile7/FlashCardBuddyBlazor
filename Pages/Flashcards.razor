@using FlashCardBuddyBlazor.Models;
@using FlashCardBuddyBlazor.Services;

@page "/Flashcards"

@inject FlashcardService flashcardService;
@inject UserService userservice; 
@inject NavigationManager navManager;

<PageTitle>Flashcards</PageTitle>

<h1>@if(userservice.Isloggedin){<span>@userservice.activeUser.Username's</span>} Flashcard Stacks</h1>
<hr>

@if(userservice.Isloggedin) 
{
    @foreach(string stack in userStacks)
    {
        <button @onclick="() => NavWithValue(stack)">@stack</button>
        <br>
    }
}



@code
{
    List<Flashcard> allFlashcards = new List<Flashcard>();
    List<string> userStacks = [];
    string userSelection = "";
    protected override async Task OnInitializedAsync() 
    {
        if (userservice.Isloggedin) 
        {
            allFlashcards = await flashcardService.GetAllFlashCardsAsync(userservice.activeUser.Userid);
        }
        if(allFlashcards.Count > 0) 
        {
            GetStacks();
            StateHasChanged(); 
        }
    } 

    private void GetStacks()
    {
        foreach(Flashcard card in allFlashcards)
        {
            if(!userStacks.Contains(card.Stack))
            {
                userStacks.Add(card.Stack); 
            }
        }
    }

    private void NavWithValue(string stack)
    {
        flashcardService.stackChoice = stack;
        navManager.NavigateTo("/display");
    }

}