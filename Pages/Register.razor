@using FlashCardBuddyBlazor.Models;
@using FlashCardBuddyBlazor.Services;

@page "/register"

@inject UserService userService;

<PageTitle>Register</PageTitle>

<h1>Register</h1>

@if(successMessage.Length != 0)
{
    <p style="color: green">@successMessage</p>
}

<EditForm Model= "@user" OnValidSubmit="RegisterUser">

    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label>First Name:</label>
        <input type="text" class="form-control" @bind-value="user.Firstname"/>
        <ValidationMessage For="@(() => user.Firstname)" />
    </div>
    
    <div>
        <label>Last Name:</label>
        <input type="text" class="form-control" @bind-value="user.Lastname"/>
        <ValidationMessage For="@(() => user.Lastname)" />
    </div>

    <div>
        <label>Email:</label>
        <input type="text" class="form-control" @bind-value="user.Email"/>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    
    <div>
        <label>Username:</label>
        <input type="text" class="form-control" @bind-value="user.Username"/>
        <ValidationMessage For="@(() => user.Username)" />
    </div>

    <div>
        <label>Password:</label>
        <input type="password" class="form-control" @bind-value="user.Password"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <div>
        <label>Confirm Password:</label>
        <input type="password" class="form-control" @bind-value="user.ConfirmPassword"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>

    <br>

    <button type="submit" class="btn btn-primary">Register</button>

</EditForm>

@code 
{
    // Variables
    private PostUserDTO user = new PostUserDTO();

    string successMessage = string.Empty;

    // Methods
    private async Task RegisterUser() 
    {
        if(await userService.PostUserAsync(user) == true) 
        {
            successMessage = "Registration complete.";
            this.user = new PostUserDTO();
        }
        
    }

    

}